#!/usr/bin/python3
import argparse
import os
import subprocess
import shutil
import sys
import tempfile


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="update zip generator")

    parser.add_argument("mode", metavar="MODE", choices=('full', 'partial'))
    parser.add_argument("name", metavar="NAME")
    parser.add_argument("squashfs", metavar="SQUASHFS")
    parser.add_argument("removelist", metavar="REMOVE-LIST", nargs="?",
                        default=None)

    args = parser.parse_args()

    # Some checks
    if args.mode == "partial" and not args.removelist:
        parser.error("You must specify a remove list.")

    if args.mode == "full" and args.removelist:
        parser.error("You can't specify a remove list.")

    if not os.path.exists(args.squashfs):
        parser.error("Source squashfs '%s' doesn't exist." % args.squashfs)

    if args.removelist and not os.path.exists(args.removelist):
        parser.error("Removelist '%s' doesn't exist." % args.removelist)

    output = tempfile.mkdtemp()

    shutil.copy("share/update-%s" % args.mode, "%s/update" % output)
    shutil.copy(args.squashfs, "%s/rootfs.squashfs" % output)
    if args.mode == "partial":
        shutil.copy(args.removelist, "%s/rootfs.remove" % output)

    # Generate the zip
    current_dir = os.getcwd()
    os.chdir(output)
    filename = args.name.split("/")[-1]
    if subprocess.call(["zip", filename, "-r", "."]) != 0:
        sys.stderr.write("Failed to create zip file.\n")
    os.chdir(current_dir)

    shutil.copy("%s/%s" % (output, filename), args.name)

    # Cleanup
    shutil.rmtree(output)
